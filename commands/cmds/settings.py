#          ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñà  ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà
#          ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà ‚ñÄ ‚ñà ‚ñà‚ñà‚ñÑ ‚ñà ‚ñà ‚ñÄ‚ñÑ‚ñÑ‚ñÄ ‚ñà‚ñÄ‚ñÑ ‚ñà‚ñÑ‚ñà ‚ñÑ
#                ¬© Copyright 2024
#            ‚úà https://t.me/kamekuro

# üîí Licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://creativecommons.org/licenses/by-nc-nd/4.0
# + attribution
# + non-commercial
# + no-derivatives

# You CANNOT edit, distribute or redistribute and use for any purpose this file without direct permission from the author.
# All source code is provided for review only.

import datetime
import logging
import pytz

import pyrogram
import pyroboard
from pyrogram import types

import dispatch.fsm
import utils
from dispatch import filters
from dispatch.routing import Router


settings = Router("settings")
logger = logging.getLogger(__name__)


@settings.on_message(
    filters.command(commands=["settings", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏"])
    | filters.text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", False)
)
async def setts(client: pyrogram.Client, message: types.Message):
    user = utils.db.getUser(message.from_user.id)
    kb = pyroboard.ReplyKeyboard(2)
    if utils.db.getNSUser(message.from_user.id):
        kb.add(
            types.KeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        )
    kb.row(types.KeyboardButton(text=("üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞" if utils.db.getNSUser(message.from_user.id) else "‚ù§Ô∏è –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç")))
    kb.row(types.KeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    await utils.answer(
        message,
        f"üëæ <b>–ù–∏–∂–µ –í—ã –≤–∏–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é:</b>",
        reply_markup=kb
    )



@settings.on_message(
    filters.command(commands=["notifsettings", "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"])
    | filters.text("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", False)
)
async def sets_notifications(client: pyrogram.Client, message: types.Message):
    await utils.answer(
        message, "üëæ <b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å.</b>",
        reply_markup=types.InlineKeyboardMarkup([
            [types.InlineKeyboardButton(text="‚è∞ –†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è", callback_data="set_schedule_mailing")]
        ])
    )


@settings.on_callback_query(
    filters.startswith("set_schedule_mailing")
)
async def set_schedule_mailing(client: pyrogram.Client, query: types.CallbackQuery):
    user = utils.db.getUser(query.from_user.id)
    if user[2] == 1:
        return await utils.edit(
            query.message,
            f"‚è∞ <b>–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –≤—Ä–µ–º—è {user[3]} (GMT+3, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è). –•–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å, –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è?</b>",
            reply_markup=types.InlineKeyboardMarkup([
                [types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è", callback_data="change_schedule_mailing")],
                [types.InlineKeyboardButton(text="–û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="disable_schedule_mailing")]
            ])
        )

    await utils.edit(
        query.message,
        f"‚è∞ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (GMT+3, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è), –≤ –∫–æ—Ç–æ—Ä–æ–µ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç—å " \
        f"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ß–ß:–ú–ú</b>\n<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> <code>07:25</code>" \
        f"\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel",
    )
    await dispatch.fsm.set_state(client, "schedule_mailing_time", query.from_user.id, query.message.chat.id)


@settings.on_message(
    dispatch.fsm.StateFilter("schedule_mailing_time")
)
async def sets_notifications(client: pyrogram.Client, message: types.Message):
    time = message.text

    try: datetime.datetime.strptime(time, "%H:%M")
    except:
        return await utils.answer(
            message,
            f"üòî –í—ã –≤–≤–µ–ª–∏ –≤—Ä–µ–º—è –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!\n\n‚è∞ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (GMT+3, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è), –≤ –∫–æ—Ç–æ—Ä–æ–µ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ß–ß:–ú–ú</b>\n<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> <code>07:25</code>"
        )

    utils.db.save(
        "UPDATE users SET set_mailing_schedule = ?, mailing_schedule_time = ?" \
        ", last_mail_send = ? WHERE id = ?",
        1, time,
        (
            datetime.datetime.now(tz=pytz.timezone("Europe/Moscow"))-datetime.timedelta(days=1)
        ).strftime("%d.%m.%Y"),
        message.from_user.id
    )
    await utils.answer(
        message,
        f"‚è∞ <b>–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ –≤—Ä–µ–º—è {time} (GMT+3, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è)</b>"
    )


@settings.on_callback_query(
    filters.startswith("change_schedule_mailing")
)
async def change_schedule_mailing(client: pyrogram.Client, query: types.CallbackQuery):
    await utils.edit(
        query.message,
        f"‚è∞ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è (GMT+3, –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è), –≤ –∫–æ—Ç–æ—Ä–æ–µ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—É—á–∞—Ç—å " \
        f"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: –ß–ß:–ú–ú</b>\n<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> <code>07:25</code>" \
        f"\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel",
    )
    await dispatch.fsm.set_state(client, "schedule_mailing_time", query.from_user.id, query.message.chat.id)


@settings.on_callback_query(
    filters.startswith("disable_schedule_mailing")
)
async def disable_schedule_mailing(client: pyrogram.Client, query: types.CallbackQuery):
    await utils.edit(
        query.message,
        f"ü§î <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è?</b>",
        reply_markup=types.InlineKeyboardMarkup([
            [types.InlineKeyboardButton(text="–î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å", callback_data="fdisable_schedule_mailing")]
        ])
    )


@settings.on_callback_query(
    filters.startswith("fdisable_schedule_mailing")
)
async def disable_schedule_mailing(client: pyrogram.Client, query: types.CallbackQuery):
    utils.db.save(
        "UPDATE users SET set_mailing_schedule = ? WHERE id = ?",
        0, query.from_user.id
    )

    await query.message.delete()
    await utils.answer(
        query.message,
        f"‚ùå <b>–†–∞—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞.</b>",
        reply_markup=utils.getMenuKB(query.from_user.id) if query.message.chat.type == pyrogram.enums.chat_type.ChatType.PRIVATE else None
    )
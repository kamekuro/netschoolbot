#          ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñà  ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà
#          ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà ‚ñÄ ‚ñà ‚ñà‚ñà‚ñÑ ‚ñà ‚ñà ‚ñÄ‚ñÑ‚ñÑ‚ñÄ ‚ñà‚ñÄ‚ñÑ ‚ñà‚ñÑ‚ñà ‚ñÑ
#                ¬© Copyright 2024
#            ‚úà https://t.me/kamekuro

# üîí Licensed under CC-BY-NC-ND 4.0 unless otherwise specified.
# üåê https://creativecommons.org/licenses/by-nc-nd/4.0
# + attribution
# + non-commercial
# + no-derivatives

# You CANNOT edit, distribute or redistribute and use for any purpose this file without direct permission from the author.
# All source code is provided for review only.

import logging 
import os; os.system("clear")
if not os.path.exists('config.json'):
    exit("\033[31m–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª\033[0m \033[36mconfig.json\033[31m!\033[0m")

import version
import utils; utils.checkConfig()
from commands import routers
from loader import client, patch, scheduler
from utils import middlewares

logging.basicConfig(
    level=logging.INFO,
    format="[%(asctime)s] [%(levelname)s] [%(name)s.%(funcName)s:%(lineno)d]\n>>> %(message)s\n\n",
    filename="logs.log",
    filemode="w+"
)
patch.include_middleware(middlewares.NoChats())
patch.include_middleware(middlewares.RegUser())

utils.init_db()
utils.printMe()
print("\033[36m–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–æ—É—Ç–µ—Ä–∞–º:\033[0m")
for router in routers:
    if utils.config['commands'][router.name]:
        patch.include_router(router)
        print(f"\033[32m  ‚Ä¢ –†–æ—É—Ç–µ—Ä [{router.name}] —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\033[0m")
        continue
    print(f"\033[31m  ‚Ä¢ –†–æ—É—Ç–µ—Ä [{router.name}] –æ—Ç–∫–ª—é—á–µ–Ω.\033[0m")


scheduler.add_job(utils.sendBackup, "interval", seconds=3600)
scheduler.add_job(utils.sendSchedule, "interval", seconds=30)

print(f"\033[36m–ë–æ—Ç [NetSchool Bot v{'.'.join(list(map(str, list(version.__version__))))}] —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!\033[0m")
scheduler.start()
client.run()